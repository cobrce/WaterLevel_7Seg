/*
 * ShiftRegister.h
 *
 * Created: 29-Oct-18 14:04:35
 *  Author: COB
 */

#ifndef SHIFTREGISTER_H_
#define SHIFTREGISTER_H_

#define OUTPUT_REGISTER_DATA_PORT &PORTD
#define OUTPUT_REGISTER_CLOCK_PORT &PORTD
#define OUTPUT_REGISTER_WRITE_PORT &PORTD

#define OUTPUT_REGISTER_DATA_DIR &DDRD
#define OUTPUT_REGISTER_CLOCK_DIR &DDRD
#define OUTPUT_REGISTER_WRITE_DIR &DDRD

#define OUTPUT_REGISTER_DATA_PIN PD5
#define OUTPUT_REGISTER_CLOCK_PIN PD6
#define OUTPUT_REGISTER_WRITE_PIN PD7

void InitShiftRegister()
{
    *OUTPUT_REGISTER_DATA_DIR |= _BV(OUTPUT_REGISTER_DATA_PIN);
    *OUTPUT_REGISTER_CLOCK_DIR |= _BV(OUTPUT_REGISTER_CLOCK_PIN);
    *OUTPUT_REGISTER_WRITE_DIR |= _BV(OUTPUT_REGISTER_WRITE_PIN);
}

void UpdateRegister()
{
    *OUTPUT_REGISTER_WRITE_PORT |= _BV(OUTPUT_REGISTER_WRITE_PIN); // SetBool(OUTPUT_REGISTER_WRITE_PORT,OUTPUT_REGISTER_WRITE_PIN,true);
    _delay_us(10);

    *OUTPUT_REGISTER_WRITE_PORT &= ~_BV(OUTPUT_REGISTER_WRITE_PIN); // SetBool(OUTPUT_REGISTER_WRITE_PORT,OUTPUT_REGISTER_WRITE_PIN,false);
    _delay_us(10);
}

volatile int d;
void WriteRegister(uint8_t data)
{
    for (int i = 7; i >= 0; i--)
    {
        if ((data >> i) & 1) // SetBool(OUTPUT_REGISTER_DATA_PORT,OUTPUT_REGISTER_DATA_PIN,(data >> i) & 1);
            *OUTPUT_REGISTER_DATA_PORT |= _BV(OUTPUT_REGISTER_DATA_PIN);
        else
            *OUTPUT_REGISTER_DATA_PORT &= ~_BV(OUTPUT_REGISTER_DATA_PIN);

        *OUTPUT_REGISTER_CLOCK_PORT |= _BV(OUTPUT_REGISTER_CLOCK_PIN); // SetBool(OUTPUT_REGISTER_CLOCK_PORT,OUTPUT_REGISTER_CLOCK_PIN,true);
        _delay_us(10);

        *OUTPUT_REGISTER_CLOCK_PORT &= ~_BV(OUTPUT_REGISTER_CLOCK_PIN); // SetBool(OUTPUT_REGISTER_CLOCK_PORT,OUTPUT_REGISTER_CLOCK_PIN,false);
        _delay_us(10);
    }
}

#endif /* SHIFTREGISTER_H_ */